import{ae as n,aQ as e,r as t,dG as o,dH as r,bZ as u,o as i,U as s,dF as a,I as l,ap as c,B as f}from"./index-DGroVdsV.js";function d(n){return!!r()&&(u(n),!0)}function m(){const n=new Set,e=e=>{n.delete(e)};return{on:t=>{n.add(t);const o=()=>e(t);return d(o),{off:o}},off:e,trigger:(...e)=>Promise.all(Array.from(n).map((n=>n(...e)))),clear:()=>{n.clear()}}}const h="undefined"!=typeof window&&"undefined"!=typeof document;"undefined"!=typeof WorkerGlobalScope&&(globalThis,WorkerGlobalScope);const p=()=>{};function y(...r){if(1!==r.length)return n(...r);const u=r[0];return"function"==typeof u?e(o((()=>({get:u,set:p})))):t(u)}function g(n,e=!1,t="Timeout"){return new Promise(((o,r)=>{e?setTimeout((()=>r(t)),n):setTimeout(o,n)}))}function T(n,e=!0,t){f()?i(n,t):e?n():s(n)}function w(n,e=!1){function t(t,{flush:o="sync",deep:r=!1,timeout:u,throwOnTimeout:i}={}){let c=null;const f=[new Promise((u=>{c=l(n,(n=>{t(n)!==e&&(c?c():s((()=>null==c?void 0:c())),u(n))}),{flush:o,deep:r,immediate:!0})}))];return null!=u&&f.push(g(u,i).then((()=>a(n))).finally((()=>null==c?void 0:c()))),Promise.race(f)}function o(o,r){if(!c(o))return t((n=>n===o),r);const{flush:u="sync",deep:i=!1,timeout:f,throwOnTimeout:d}=null!=r?r:{};let m=null;const h=[new Promise((t=>{m=l([n,o],(([n,o])=>{e!==(n===o)&&(m?m():s((()=>null==m?void 0:m())),t(n))}),{flush:u,deep:i,immediate:!0})}))];return null!=f&&h.push(g(f,d).then((()=>a(n))).finally((()=>(null==m||m(),a(n))))),Promise.race(h)}function r(n){return u(1,n)}function u(n=1,e){let o=-1;return t((()=>(o+=1,o>=n)),e)}if(Array.isArray(a(n))){return{toMatch:t,toContains:function(n,e){return t((e=>{const t=Array.from(e);return t.includes(n)||t.includes(a(n))}),e)},changed:r,changedTimes:u,get not(){return w(n,!e)}}}return{toMatch:t,toBe:o,toBeTruthy:function(n){return t((n=>Boolean(n)),n)},toBeNull:function(n){return o(null,n)},toBeNaN:function(n){return t(Number.isNaN,n)},toBeUndefined:function(n){return o(void 0,n)},changed:r,changedTimes:u,get not(){return w(n,!e)}}}function B(n){return w(n)}export{T as a,d as b,m as c,h as i,y as t,B as u};
